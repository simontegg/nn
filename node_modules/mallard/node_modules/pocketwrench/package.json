{
  "name": "pocketwrench",
  "version": "0.0.1",
  "description": "An eclectic collection of JavaScript utilities",
  "main": "index.js",
  "scripts": {
    "test": "gulp test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/stevedocious/pocketwrench.git"
  },
  "keywords": [
    "utility"
  ],
  "author": {
    "name": "stevedocious"
  },
  "license": "LGPLv3",
  "bugs": {
    "url": "https://github.com/stevedocious/pocketwrench/issues"
  },
  "homepage": "https://github.com/stevedocious/pocketwrench",
  "devDependencies": {
    "gulp": "^3.8.6",
    "chai": "^1.9.1",
    "sinon": "^1.10.3",
    "conventional-changelog": "0.0.11",
    "gulp-jshint": "^1.8.0",
    "gulp-mocha": "^0.5.2",
    "gulp-istanbul": "^0.2.1",
    "gulp-coveralls": "^0.1.2",
    "jshint-stylish": "^0.4.0",
    "browserify": "^5.9.1",
    "vinyl-source-stream": "^0.1.1"
  },
  "readme": "pocketwrench\r\n============\r\n\r\nAn eclectic collection of JavaScript utilities\r\n\r\n[![Build Status](https://travis-ci.org/stevedocious/pocketwrench.svg?branch=master)](https://travis-ci.org/stevedocious/pocketwrench)\r\n[![Coverage Status](https://img.shields.io/coveralls/stevedocious/pocketwrench.svg)](https://coveralls.io/r/stevedocious/pocketwrench?branch=master)\r\n\r\n### Module Overview\r\n\r\nPocketwrench is a collection of JavaScript utility functions that I've found useful over the years. The collection is pretty eclectic, and reflects the various problems\r\nI've needed to solve on a bunch of different projects. The functions are split into different namespaces dependent on what they cover. For example, there is an 'array'\r\nnamespace containing all the functions that operate on arrays. I've not attached any new functions to the built in object prototypes because the\r\nfunctions are often only applicable in certain circumstances.\r\n\r\nThe namespaces are:\r\n\r\n- [array](#array-namepace) - Utility functions that operate on arrays of objects.\r\n- [browser](#browser-namespace) - Functions to aid interaction with the browser.\r\n- [math](#math-namespace) - Mathematical functions.\r\n- [object](#object-namespace) - Utility functions that operate on objects.\r\n\r\n### Usage\r\n\r\n#### array Namespace\r\n\r\n##### findFirstByField(array, fieldName, valueToSearchFor)\r\n\r\nFind the first occurrence of an object with key *fieldName* and value *valueToSearchFor*.\r\n\r\n```javascript\r\nvar pocketwrench = require('pocketwrench');\r\n\r\nvar testCollection = [\r\n  {name: 'Fred', age: 25},\r\n  {name: 'Bob', age: 40},\r\n  {name: 'Sally', age: 42},\r\n  {name: 'Alice', age: 34},\r\n  {name: 'Jane', age: 25}\r\n];\r\n\r\npocketwrench.array.findFirstByField(testCollection, 'name', 'Sally');\r\n\r\n==> {name: 'Sally', age: 42}\r\n```\r\n\r\n##### findByField(array, fieldName, valueToSearchFor)\r\n\r\nFind all the objects with a key *fieldName* that have a value *valueToSearchFor*.\r\n\r\n```javascript\r\npocketwrench.array.findFirstByField(testCollection, 'age', 25);\r\n\r\n==> [{name: 'Fred', age: 25}, {name: 'Jane', age: 25}]\r\n```\r\n##### findFirstIndexByField(array, fieldName, valueToSearchFor)\r\n\r\nFind the index of the first occurrence of an object with key *fieldName* and value *valueToSearchFor*.\r\n\r\n```javascript\r\npocketwrench.array.findFirstIndexByField(testCollection, 'name', 'Sally');\r\n\r\n==> 2\r\n```\r\n\r\n##### sortByField(array, fieldName, desc)\r\n\r\nSort an array of objects by attribute *fieldName*. *desc* is a boolean indicating the sort direction, true sorts\r\ndescending, false (or omitting the argument altogeter) sorts ascending.\r\n\r\n```javascript\r\npocketwrench.array.sortByField(testCollection, 'name', false);\r\n\r\n==> [\r\n    {name: 'Alice', age: 34},\r\n    {name: 'Bob', age: 40},\r\n    {name: 'Fred', age: 25},\r\n    {name: 'Jane', age: 25},\r\n    {name: 'Sally', age: 42}\r\n  ];\r\n```\r\n\r\n##### mostFrequentElement(collection, fieldName)\r\n\r\nFind the most frequency occurring value for *fieldName*.\r\n\r\n```javascript\r\npocketwrench.array.mostFrequentElement(testCollection, 'age')\r\n\r\n==> 25\r\n```\r\n\r\n#### browser Namespace\r\n\r\n##### getQuerystringValues()\r\n\r\nGets the query string as an object.\r\n\r\n```javascript\r\npocketwrench.browser.getQuerystringValues()\r\n\r\n==> {\r\n  'key1' : 'value1',\r\n  'key2' : 'value2',\r\n  'key3' : 'value3'\r\n}\r\n```\r\n\r\n##### getQuerystringValue(keyName)\r\n\r\nGet the value from the query string that corresponds to *keyName*.\r\n\r\n```javascript\r\npocketwrench.browser.getQuerystringValue('key1')\r\n\r\n==> 'value1'\r\n```\r\n\r\n#### math Namespace\r\n\r\n##### logx(number, base)\r\n\r\nReturn the log of *number* to the base *base*.\r\n\r\n```javascript\r\npocketwrench.math.logx(8, 2)\r\n\r\n==> 3\r\n```\r\n\r\n#### object Namespace\r\n\r\n##### isDictionary(obj)\r\n\r\nReturns true if *obj* is a dictionary, otherwise returns false.\r\n\r\n```javascript\r\npocketwrench.object.isDictionary([1,2,3])\r\n\r\n==> false\r\n\r\npocketwrench.object.isDictionary({ 'a' : 1, 'b' : 2 })\r\n\r\n==> true\r\n```\r\n",
  "readmeFilename": "README.md",
  "_id": "pocketwrench@0.0.1",
  "_shasum": "c6e60999bac3b113306fe8dd2399afd5dbe5c14b",
  "_from": "pocketwrench@0.0.1",
  "_resolved": "https://registry.npmjs.org/pocketwrench/-/pocketwrench-0.0.1.tgz"
}
